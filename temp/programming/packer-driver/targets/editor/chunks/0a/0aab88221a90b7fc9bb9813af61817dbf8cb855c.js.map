{"version":3,"sources":["file:///E:/GitHub/HeroClash/assets/src/store/store.ts"],"names":["_decorator","Button","Component","Node","ccclass","property","storeMenu","store","storeMap","Map","change2ResourceStore","changeStore","Resource","change2RoleStore","Role","change2WeaponStore","Weapon","forEach","storeItem","key","button","interactable","canvas","active","currentStoreItem","get","onLoad","set","resourceButton","resourceCanvas","roleButton","roleCanvas","weaponButton","weaponCanvas","start","update","deltaTime"],"mappings":"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","sourcesContent":["// 商城模块\nimport { _decorator, Button, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n// 商城菜单\nenum storeMenu {\n    // 资源商城\n    Resource,\n    // 武将商城\n    Role,\n    // 武器商城\n    Weapon\n}\n\n// 商城切换结构体\ninterface storeItem {\n    button: Button;\n    canvas: Node;\n}\n\n@ccclass('store')\nexport class store extends Component {\n    // 资源商城按钮\n    @property(Button)\n    public resourceButton: Button = null;\n    // 资源商城画布\n    @property(Node)\n    public resourceCanvas: Node = null;\n    // 武将商城按钮\n    @property(Button)\n    public roleButton: Button = null;\n    // 武将商城画布\n    @property(Node)\n    public roleCanvas: Node = null;\n    // 武器商城按钮\n    @property(Button)\n    public weaponButton: Button = null;\n    // 武器商城画布\n    @property(Node)\n    public weaponCanvas: Node = null;\n\n    private storeMap = new Map<storeMenu, storeItem>();\n\n    // 展示资源商城\n    public change2ResourceStore() {\n        this.changeStore(storeMenu.Resource);\n    }\n\n    // 展示武将商城\n    public change2RoleStore() {\n        this.changeStore(storeMenu.Role);\n    }\n\n    // 展示武器商城\n    public change2WeaponStore() {\n        this.changeStore(storeMenu.Weapon);\n    }\n\n    // 切换商城\n    private changeStore(store: storeMenu) {\n        // 先启用其他按钮并隐藏对应的画布\n        this.storeMap.forEach((storeItem, key) => {\n            if (key !== store) {\n                storeItem.button.interactable = true;\n                storeItem.canvas.active = false;\n            }\n        });\n\n        // 禁用当前按钮并打开画布\n        const currentStoreItem = this.storeMap.get(store);\n        if (currentStoreItem) {\n            currentStoreItem.button.interactable = false;\n            currentStoreItem.canvas.active = true;\n        }\n    }\n\n    protected onLoad(): void {\n        this.storeMap.set(storeMenu.Resource, { button: this.resourceButton, canvas: this.resourceCanvas });\n        this.storeMap.set(storeMenu.Role, { button: this.roleButton, canvas: this.roleCanvas });\n        this.storeMap.set(storeMenu.Weapon, { button: this.weaponButton, canvas: this.weaponCanvas });\n    }\n\n    start() {\n        this.changeStore(storeMenu.Resource);\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}