{"version":3,"sources":["file:///E:/GitHub/HeroClash/assets/src/utils/mutex.ts"],"names":["Mutex","VisibleError","ERROR_CODES","getInstance","instance","lock","resourceId","locks","get","LOCK_FAILED","wasLocked","set","unlock","has","Map"],"mappings":";;;yDAGaA,K;;;;;;;;;;;;;;;;;;AAHJC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,W,iBAAAA,W;;;;;;;AAEvB;uBACaF,K,GAAN,MAAMA,KAAN,CAAY;AAMf;AACyB,eAAXG,WAAW,GAAU;AAC/B,cAAI,CAACH,KAAK,CAACI,QAAX,EAAqB;AACjBJ,YAAAA,KAAK,CAACI,QAAN,GAAiB,IAAIJ,KAAJ,EAAjB;AACH;;AAED,iBAAOA,KAAK,CAACI,QAAb;AACH,SAbc,CAef;;;AACOC,QAAAA,IAAI,CAACC,UAAD,EAA2B;AAClC;AACA,cAAIN,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgBF,UAAhB,CAAJ,EAAiC;AAC7B;AACA,kBAAM;AAAA;AAAA,8CAAiB;AAAA;AAAA,4CAAYG,WAA7B,EAA2C,+BAA8BH,UAAW,oBAApF,CAAN;AACH,WALiC,CAOlC;;;AACA,gBAAMI,SAAS,GAAGV,KAAK,CAACO,KAAN,CAAYI,GAAZ,CAAgBL,UAAhB,EAA4B,IAA5B,EAAkCE,GAAlC,CAAsCF,UAAtC,CAAlB;;AACA,cAAI,CAACI,SAAL,EAAgB;AACZ;AACA,kBAAM;AAAA;AAAA,8CAAiB;AAAA;AAAA,4CAAYD,WAA7B,EAA2C,+BAA8BH,UAAW,sBAApF,CAAN;AACH;AACJ,SA7Bc,CA+Bf;;;AACOM,QAAAA,MAAM,CAACN,UAAD,EAA2B;AACpC,cAAI,CAACN,KAAK,CAACO,KAAN,CAAYM,GAAZ,CAAgBP,UAAhB,CAAL,EAAkC;AAC9B;AACH;;AACDN,UAAAA,KAAK,CAACO,KAAN,CAAYI,GAAZ,CAAgBL,UAAhB,EAA4B,KAA5B;AACH;;AArCc,O;;AACf;AADSN,MAAAA,K,CAEMI,Q;AACf;AAHSJ,MAAAA,K,CAIMO,K,GAA8B,IAAIO,GAAJ,E","sourcesContent":["import { VisibleError, ERROR_CODES } from \"./errors\";\n\n// 互斥锁\nexport class Mutex {\n    // 互斥锁实例\n    private static instance: Mutex;\n    // 锁map\n    private static locks: Map<string, boolean> = new Map();\n\n    // 获取互斥锁单例\n    public static getInstance(): Mutex {\n        if (!Mutex.instance) {\n            Mutex.instance = new Mutex();\n        }\n\n        return Mutex.instance;\n    }\n\n    // 锁函数，使用资源ID进行加锁\n    public lock(resourceId: string): void {\n        // 如果已经加锁，直接报错\n        if (Mutex.locks.get(resourceId)) {\n            // 锁已经被占用，抛出错误\n            throw new VisibleError(ERROR_CODES.LOCK_FAILED, `Mutex lock failed: resource ${resourceId} is already locked`);\n        }\n\n        // 设置锁\n        const wasLocked = Mutex.locks.set(resourceId, true).get(resourceId);\n        if (!wasLocked) {\n            // 如果设置锁失败，抛出错误\n            throw new VisibleError(ERROR_CODES.LOCK_FAILED, `Mutex lock failed: resource ${resourceId} could not be locked`);\n        }\n    }\n\n    // 解锁函数\n    public unlock(resourceId: string): void {\n        if (!Mutex.locks.has(resourceId)) {\n            return;\n        }\n        Mutex.locks.set(resourceId, false);\n    }\n}"]}