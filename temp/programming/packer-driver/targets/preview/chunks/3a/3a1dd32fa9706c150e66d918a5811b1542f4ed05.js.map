{"version":3,"sources":["file:///Users/yinshi/study/pfq/project/HeroClash/assets/src/store/resourceStore.ts"],"names":["_decorator","Node","Component","Button","Label","CurrencyType","CurrencyManager","ccclass","property","resourceStore","currencyManager","storeMap","Map","onLoad","getInstance","set","freeCopper","kind","Copper","purchaseQuantity","purchasesRemaining","adsCopper","freeHetianJade","HetianJade","adsHetianJade","discountEvolutionStone","EvolutionStone","purchaseCost","cost","discountIronOre","IronOre","discountBattleSoulStone","BattleSoulStone","createCurrency","purchase","currency","costKind","onPurchaseButtonClick","event","node","target","button","getComponent","interactable","parentNode","getParent","purchaseInfo","get","console","log","updateResource","error","message","Error","toString","updateNodeStates","has","resource","getChildByName","label","string","updateAllNodeStates","forEach","_","start","update","deltaTime"],"mappings":"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","sourcesContent":["// 资源商城\nimport { _decorator, Node, Component, Event, Button, Label } from 'cc';\nimport { CurrencyType, Currency } from '../resource/currency/kind';\nimport { CurrencyManager } from '../resource/currency/manager';\nconst { ccclass, property } = _decorator;\n\n// 购买资源属性\ninterface purchaseResource {\n    // 资源类型\n    kind: CurrencyType,\n    // 购买一次的数量\n    purchaseQuantity: number,\n    // 剩余购买次数\n    purchasesRemaining: number,\n    // 购买价格\n    purchaseCost?: purchaseCost,\n}\n\n// 购买价格\ninterface purchaseCost {\n    // 资源类型\n    kind: CurrencyType,\n    // 花费数量\n    cost: number;\n}\n\n@ccclass('resourceStore')\nexport class resourceStore extends Component {\n    // 货币管理实例\n    private currencyManager: CurrencyManager = null;\n\n    // 每日免费铜钱\n    @property(Node)\n    private freeCopper: Node = null;\n    // 每日看广告免费铜钱\n    @property(Node)\n    private adsCopper: Node = null;\n    // 每日免费和田玉\n    @property(Node)\n    private freeHetianJade: Node = null;\n    // 每日看广告免费和田玉\n    @property(Node)\n    private adsHetianJade: Node = null;\n    // 每日打折进阶石\n    @property(Node)\n    private discountEvolutionStone: Node = null;\n    // 每日打折铁矿\n    @property(Node)\n    private discountIronOre: Node = null;\n    // 每日打折战魂石\n    @property(Node)\n    private discountBattleSoulStone: Node = null;\n\n    // 创建一个 Map 保存按钮和对应的购买资源\n    private storeMap: Map<Node, purchaseResource> = new Map();\n\n    // 初始化资源限制\n    protected onLoad(): void {\n        this.currencyManager = CurrencyManager.getInstance();\n        // 每日免费铜钱，每次10，只能购买3次\n        this.storeMap.set(this.freeCopper, {\n            kind: CurrencyType.Copper,\n            purchaseQuantity: 10,\n            purchasesRemaining: 3\n        });\n        // 每日看广告免费铜钱，每次100，只能购买3次\n        this.storeMap.set(this.adsCopper, {\n            kind: CurrencyType.Copper,\n            purchaseQuantity: 100,\n            purchasesRemaining: 3\n        });\n        // 每日免费和田玉，每次10，只能购买1次\n        this.storeMap.set(this.freeHetianJade, {\n            kind: CurrencyType.HetianJade,\n            purchaseQuantity: 10,\n            purchasesRemaining: 1\n        });\n        // 每日看广告免费和田玉，每次100，只能购买3次\n        this.storeMap.set(this.adsHetianJade, {\n            kind: CurrencyType.HetianJade,\n            purchaseQuantity: 100,\n            purchasesRemaining: 3\n        });\n        // 每日打折进阶石，每次100，只能购买3次\n        this.storeMap.set(this.discountEvolutionStone, {\n            kind: CurrencyType.EvolutionStone,\n            purchaseQuantity: 100,\n            purchasesRemaining: 3,\n            purchaseCost: {\n                kind: CurrencyType.Copper,\n                cost: 199\n            }\n        });\n        // 每日打折铁矿，每次100，只能购买3次\n        this.storeMap.set(this.discountIronOre, {\n            kind: CurrencyType.IronOre,\n            purchaseQuantity: 100,\n            purchasesRemaining: 3,\n            purchaseCost: {\n                kind: CurrencyType.Copper,\n                cost: 199\n            }\n        });\n        // 每日打折战魂石，每次100，只能购买3次\n        this.storeMap.set(this.discountBattleSoulStone, {\n            kind: CurrencyType.BattleSoulStone,\n            purchaseQuantity: 100,\n            purchasesRemaining: 3,\n            purchaseCost: {\n                kind: CurrencyType.HetianJade,\n                cost: 99\n            }\n        });\n    }\n\n    // 根据 purchaseResource 创建 Currency\n    private createCurrency(purchase: purchaseResource): Currency {\n        const currency: Currency = {};\n        // 根据 purchase.kind 动态设置对应的数量\n        currency[purchase.kind] = purchase.purchaseQuantity;\n        // 如果 purchaseCost 存在，则为对应的 currency 类型添加购买价格\n        if (purchase.purchaseCost) {\n            const costKind = purchase.purchaseCost.kind;\n            currency[costKind] = (currency[costKind] || 0) - purchase.purchaseCost.cost;\n        }\n\n        return currency;\n    }\n\n    // 购买资源\n    public onPurchaseButtonClick(event: Event) {\n        // 先将button禁用\n        let node = event.target as Node;\n        let button = node.getComponent(Button);\n        button.interactable = false;\n\n        // 获取父节点信息（父节点包含label等）\n        let parentNode = node.getParent();\n        let purchaseInfo = this.storeMap.get(parentNode);\n        if (!purchaseInfo || purchaseInfo.purchasesRemaining <= 0) {\n            console.log(`No remaining purchases for this resource. ${purchaseInfo}`);\n            return;\n        }\n\n        let currency = this.createCurrency(purchaseInfo);\n        // 更新资源\n        try {\n            this.currencyManager.updateResource(currency);\n        } catch (error) {\n            console.error('Error updating resource:', error.message);\n            button.interactable = true;\n            throw new Error(`Failed to update currency`);\n        }\n\n        purchaseInfo.purchasesRemaining -= 1;  // 减少剩余购买次数\n        console.log(`Purchased ${purchaseInfo.purchaseQuantity} of ${purchaseInfo.kind.toString()}`);\n        console.log(`Remaining purchases: ${purchaseInfo.purchasesRemaining}`);\n\n        // 更新资源状态\n        this.updateNodeStates(parentNode);\n    }\n\n\n    // 更新节点资源的状态\n    updateNodeStates(node: Node) {\n        if (!this.storeMap.has(node)) {\n            return;\n        }\n\n        let resource = this.storeMap.get(node);\n        let button = node.getChildByName(\"BuyButton\").getComponent(Button);\n        // 如果剩余购买次数为 0，禁用按钮\n        button.interactable = resource.purchasesRemaining > 0;\n        // 更新剩余次数\n        let label = node.getChildByName(\"LimitText\").getComponent(Label);\n        label.string = `剩余次数：${resource.purchasesRemaining}`;\n\n    }\n\n    // 更新所有资源信息\n    updateAllNodeStates() {\n        this.storeMap.forEach((_, node) => {\n            this.updateNodeStates(node);\n        })\n    }\n\n    start() {\n        this.updateAllNodeStates();\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}